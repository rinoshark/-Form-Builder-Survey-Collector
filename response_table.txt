"use client"

import type { FormElement, FormResponse } from "@/lib/types"
import { Badge } from "@/components/ui/badge"

interface ResponseTableProps {
  responses: FormResponse[]
  formFields: FormElement[]
}

export default function ResponseTable({ responses, formFields }: ResponseTableProps) {
  if (responses.length === 0) {
    return (
      <div className="text-center p-8 border border-dashed rounded-md">
        <p className="text-muted-foreground">No responses yet</p>
      </div>
    )
  }

  return (
    <div className="overflow-x-auto">
      <table className="min-w-full divide-y divide-gray-200">
        <thead className="bg-muted/50">
          <tr>
            <th className="px-6 py-3 text-left text-xs font-medium text-muted-foreground uppercase tracking-wider">
              Date
            </th>
            <th className="px-6 py-3 text-left text-xs font-medium text-muted-foreground uppercase tracking-wider">
              Status
            </th>
            <th className="px-6 py-3 text-left text-xs font-medium text-muted-foreground uppercase tracking-wider">
              User
            </th>
            {formFields.map((field) => (
              <th
                key={field.id}
                className="px-6 py-3 text-left text-xs font-medium text-muted-foreground uppercase tracking-wider"
              >
                {field.label}
              </th>
            ))}
          </tr>
        </thead>
        <tbody className="bg-white divide-y divide-gray-200">
          {responses.map((response) => (
            <tr key={response.id}>
              <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                {new Date(response.timestamp).toLocaleString()}
              </td>
              <td className="px-6 py-4 whitespace-nowrap text-sm">
                <Badge variant={response.status === "completed" ? "default" : "outline"}>
                  {response.status || "completed"}
                </Badge>
              </td>
              <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{response.user || "Anonymous"}</td>
              {formFields.map((field) => (
                <td key={field.id} className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                  {response.data[field.id]?.toString() || "-"}
                </td>
              ))}
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  )
}
